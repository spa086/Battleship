name: .NET

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Build Docker image
      run: |
        docker build -t your-docker-image-name .
    - name: Save Docker image to file
      run: |
        docker save your-docker-image-name > image.tar
    - name: Copy Docker image to remote DigitalOcean instance
      uses: appleboy/scp-action@master
      with:
        host: your-digital-ocean-ip-address
        username: your-digital-ocean-username
        ssh_private_key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
        source: ./image.tar
        target: /tmp/image.tar
    - name: Load Docker image on remote DigitalOcean instance
      uses: appleboy/ssh-action@master
      with:
        host: your-digital-ocean-ip-address
        username: your-digital-ocean-username
        ssh_private_key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
        script: |
          docker load -i /tmp/image.tar
    - name: SSH into DigitalOcean Droplet
      uses: appleboy/ssh-action@master
      with:
        host: your-digital-ocean-ip-address
        username: your-digital-ocean-username
        ssh_private_key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
        script: |
          docker stop your-docker-container-name || true
          docker rm your-docker-container-name || true
          docker run -d -p 80:80 --name your-docker-container-name your-docker-image-name
